average_max_three
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
#setwd("/Users/carmenortega-santos/Library/CloudStorage/Box-Box/Research/Projects/FITGut-W pilot/Training")
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
#### Mid-Thigh Pull Test ####
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
#### Mid-Thigh Pull Test ####
#### Mid-Thigh Pull Test ####
#### Mid-Thigh Pull Test ####
#### Mid-Thigh Pull Test ####
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
##### Bike Fitness Test ######
fitness_file_path <- file.choose() # Choose the study ID of interest.
bike.test.raw <-read_xlsx(fitness_file_path)
# Cleaning the data that you uploaded from the raw data from the VO2peak test from the participant
bike.test <- select(bike.test.raw,"t","HR", "Phase", VO2_kg = "VO2/Kg","VO2","VCO2","Power","RQ", "METS", phase_time ="Phase time")
bike.test <- bike.test %>%
filter(Phase != "RECOVERY" & Phase != "WARMUP" & Phase != "REST") %>%
tail(-1)
bike.test$VO2 <- as.numeric(bike.test$VO2)
bike.test$VCO2 <- as.numeric(bike.test$VCO2)
bike.test$HR <- as.numeric(bike.test$HR)
# Plot the ventilatory thresholds
bike.test$Observation <- 1:nrow(bike.test)
ggplot(bike.test) +
geom_line(aes(x = Observation, y = VO2, color = "VO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = VCO2, color = "VCO2"), size = 0.5, alpha=0.8) +
geom_line(aes(x = Observation, y = 20*HR, color ="HR"), size = 0.5, alpha = 0.8) +
scale_color_manual(values = c("VO2" = "blue", "VCO2" = "orange", "HR" = "red")) +
scale_y_continuous(sec.axis = sec_axis(~./20, name = "bpm")) +
labs(x = "Time, seconds", y = "mL/min", color = "") +
theme_minimal()
#Information required for VISIT B
#Calculate the HRR 60-70% and the equivalent watts
max.HR <- as.numeric(max(bike.test$HR, na.rm = TRUE))
rest.HR <- readline(prompt = "Enter Resting HR;   ") # This needs to be enter manually need to figure it out
rest.HR <- as.numeric(rest.HR)
HRR.60 <-(((max.HR-rest.HR)*0.60) + rest.HR)
print(HRR.60)
HRR.70 <-(((max.HR-rest.HR)*0.70) + rest.HR)
print(HRR.70)
HRR.watts <- bike.test[bike.test$HR >= HRR.60 & bike.test$HR <= HRR.70, ]
power_watts <- as.numeric(HRR.watts$Power)
power_range <- as.character(range(power_watts))
print(paste0(power_range[1],"-", power_range[2]))
#########FINAL REPORT INFORMATION############
#to complete table Exercise Prescription (i.e. What are the working zones):
HR.Z1 <- (((max.HR-rest.HR) * c(0.50, 0.60) + rest.HR)) #Zone 1
HR.Z2 <- (((max.HR-rest.HR) * c(0.60, 0.70) + rest.HR)) #Zone 2
HR.Z3 <- (((max.HR-rest.HR) * c(0.70, 0.80) + rest.HR)) #Zone 3
HR.Z4 <- (((max.HR-rest.HR) * c(0.80, 0.90) + rest.HR)) #Zone 4
HR.Z5 <- (((max.HR-rest.HR) * c(0.90, 1.0) + rest.HR)) #Zone 5
HR_table <- data.frame(
Z1 = HR.Z1,
Z2 = HR.Z2,
Z3 = HR.Z3,
Z4 = HR.Z4,
Z5 = HR.Z5
)
row.names(HR_table) <- c("Minimum, HR", "Maximum, HR")
HR_table
### Calculating the VO2peak. This is calculated as the average value of the highest three consecutive values of the VO2/kg
# You need to enter the value of step 4 under fitness report, cardiovascular fitness report
bike.test$VO2_kg <- as.numeric(bike.test$VO2_kg)
max(bike.test$VO2_kg)
# Step 1: Calculate the sum of every three consecutive values
consecutive_sums <- rollapply(bike.test$VO2_kg, width = 3, FUN = sum, align = "right", fill = NA)
# Step 2: Find the maximum sum of three consecutive values
max_sum <- max(consecutive_sums, na.rm = TRUE)
# Step 3: Calculate the average of the highest three consecutive values
average_max_three <- max_sum / 3
# Step 4: Print the result
average_max_three
library(shiny); runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
runApp('Final_Report_Maker/Final_Reprt_Maker.R')
